name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch: {}

permissions:
  contents: write

jobs:
  tests:
    name: Lint and test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: python -m pip install --upgrade pip && pip install -e .[dev]

      - name: Run linters
        run: |
          ruff check .
          black --check .

      - name: Run tests
        run: pytest -q

  package-gui:
    name: Build GUI binary
    needs: tests
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - os: ubuntu-latest
            archive: SER-Diff-Linux.zip
            binary_name: ser-diff-gui
          - os: macos-latest
            archive: SER-Diff-macOS.zip
            binary_name: SER-Diff
          - os: windows-latest
            archive: SER-Diff-Windows.zip
            binary_name: SER-Diff

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install build dependencies
        run: python -m pip install --upgrade pip && pip install -e .[dev] pyinstaller

      - name: Preflight: ensure GUI script exists
        shell: bash
        run: |
          set -e
          test -f "src/serdiff/gui_runner.py" || { echo "ERROR: src/serdiff/gui_runner.py not found"; exit 1; }
          echo "OK: src/serdiff/gui_runner.py present"

      - name: Build GUI binary
        shell: bash
        env:
          ARCHIVE_NAME: ${{ matrix.archive }}
          BINARY_NAME: ${{ matrix.binary_name }}
        run: |
          set -e
          mkdir -p upload
          if [[ "$RUNNER_OS" == "Windows" ]]; then
            pyinstaller --onefile --windowed -n "$BINARY_NAME" src/serdiff/gui_runner.py
            cp "dist/${BINARY_NAME}.exe" upload/
            cat <<'EOF_WIN' > upload/README_RUN_ME.txt
Double-click SER-Diff.exe
Pick BEFORE/AFTER XML
EOF_WIN
            powershell -command "Compress-Archive -Path upload\* -DestinationPath ${ARCHIVE_NAME}"
          elif [[ "$RUNNER_OS" == "macOS" ]]; then
            pyinstaller --onefile --windowed -n "$BINARY_NAME" src/serdiff/gui_runner.py
            cp -R "dist/${BINARY_NAME}.app" upload/
            cat <<'EOF_MAC' > upload/README_RUN_ME.txt
Open SER-Diff.app (Gatekeeper may prompt)
EOF_MAC
            (cd upload && zip -r "../${ARCHIVE_NAME}" .)
          else
            pyinstaller --onefile --windowed -n "$BINARY_NAME" src/serdiff/gui_runner.py
            cp "dist/${BINARY_NAME}" upload/
            cat <<'EOF_LINUX' > upload/README_RUN_ME.txt
./ser-diff-gui
EOF_LINUX
            (cd upload && zip -r "../${ARCHIVE_NAME}" .)
          fi

      - name: Upload workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.archive }}
          path: ${{ matrix.archive }}
          if-no-files-found: error

      - name: Upload release asset
        uses: softprops/action-gh-release@v2
        with:
          files: ${{ matrix.archive }}
